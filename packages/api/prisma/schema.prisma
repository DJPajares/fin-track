// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Type {
  id    Int         @id @default(autoincrement())
  name  String
}

model Category {
  id        Int         @id @default(autoincrement())
  name      String
  typeId    Int
  type      Type        @relation(fields: [typeId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Log       Log[]
  Recurring Recurring[]
}

model Currency {
  id        Int         @id @default(autoincrement())
  name      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Log       Log[]
  Recurring Recurring[]
}

model Log {
  id         Int      @id @default(autoincrement())
  name       String
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  amount     Decimal  @db.Decimal(9, 2)
  currencyId Int
  currency   Currency @relation(fields: [currencyId], references: [id])
  date       DateTime @db.Date
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Recurring {
  id              Int      @id @default(autoincrement())
  name            String
  categoryId      Int
  category        Category @relation(fields: [categoryId], references: [id])
  amount          Decimal  @db.Decimal(9, 2)
  currencyId      Int
  currency        Currency @relation(fields: [currencyId], references: [id])
  startDate       DateTime @db.Date
  endDate         DateTime @db.Date
  excludedDates   String[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
